{"version":3,"sources":["WaterWaveFrag.ts"],"names":[],"mappings":";;;;;AAAA;IAAA;IA+CA,CAAC;IA9CU,4BAAc,GAAG,2TAYvB,CAAC;IAEK,4BAAc,GAAG,2xBA+BvB,CAAC;IACN,oBAAC;CA/CD,AA+CC,IAAA;kBA/CoB,aAAa","file":"","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["export default class WaterWaveFrag{\n    static waterwave_vert = `\n    attribute vec4 a_position;\n    attribute vec2 a_texCoord;\n    attribute vec4 a_color;\n    varying vec2 v_texCoord;\n    varying vec4 v_fragmentColor;\n    void main()\n    {\n        gl_Position = CC_PMatrix * a_position;\n        v_fragmentColor = a_color;\n        v_texCoord = a_texCoord;\n    }\n    `;\n       \n    static waterwave_frag = `\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n    \n    #define F cos(x-y)*cos(y),sin(x+y)*sin(y)\n\n    uniform float time;\n    uniform vec2 resolution;\n    varying vec2 v_texCoord;\n\n    vec2 s(vec2 p)\n    {\n        float d=time*0.2,x=8.*(p.x+d),y=8.*(p.y+d);\n        return vec2(F);\n    }\n    void mainImage( out vec4 fragColor, in vec2 fragCoord )\n    {\n        // 换成resolution\n        vec2 rs = resolution.xy;\n        // 换成纹理坐标v_texCoord.xy\n        vec2 uv = v_texCoord.xy;\n        vec2 q = uv+2./resolution.x*(s(uv)-s(uv+rs));\n        //反转y\n        // q.y=1.-q.y;\n        fragColor = texture2D(CC_Texture0,q);\n    }\n    void main()\n    {\n        mainImage(gl_FragColor, gl_FragCoord.xy);\n    }\n    `;\n}"]}